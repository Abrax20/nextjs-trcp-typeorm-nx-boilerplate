# Base image with dependencies
FROM node:18-alpine AS deps
WORKDIR /app

# Set timezone and install system dependencies
ENV TZ=Europe/Berlin
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
    apk add --no-cache make gcc g++ python3 git libc6-compat

# Copy configs and install dependencies
COPY package.json tsconfig.json tsconfig.base.json .env jest.config.ts jest.preset.js .npmrc nx.json env.mjs yarn.lock .yarnrc.yml ./
COPY .yarn ./.yarn
RUN yarn install --frozen-lockfile

# Runner stage
FROM deps AS runner

# Environment settings
ENV NEXT_TELEMETRY_DISABLED 1
ENV NODE_ENV development
ENV PORT 3000

# Copy source files
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /app/package.json /app/yarn.lock ./
COPY . .

RUN yarn nx build app

EXPOSE 3000
CMD ["yarn", "nx", "serve", "app"]
